<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    <!-- 定义 Autowired 自动注入 bean -->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/> -->
    <!-- 配置事务异常封装 -->
    <bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <!-- 定义数据库连接池数据源bean destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
    <bean id="dataSourceHibernate" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 设置JDBC驱动名称 -->
        <property name="driverClass" value="${jdbc.driver}" />
        <!-- 设置JDBC连接URL -->
        <property name="jdbcUrl" value="${jdbc.url}" />
        <!-- 设置数据库用户名 -->
        <property name="user" value="${jdbc.username}" />
        <!-- 设置数据库密码 -->
        <property name="password" value="${jdbc.password}" />
        <!-- 设置连接池初始值 -->
        <property name="initialPoolSize" value="50" />
        <property name="maxPoolSize" value="200" />
        <!-- 最大缓存statements数，每个连接内缓存数 -->
        <!--<property name="maxStatements" value="100"/> -->
        <!--<property name="maxStatementsPerConnection" value="20"/> -->
        <!-- 多线程实现多个操作同时被执行 -->
        <property name="numHelperThreads" value="20" />
        <!--C3P0增加以下配置信息:获取connnection时测试是否有效 建议使用idleConnectionTestPeriod或automaticTestTable -->
        <!--<property name="testConnectionOnCheckin" value="true"/> -->
        <property name="automaticTestTable" value="C3P0TestTable" />
        <!--每18000秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="18000" />
        <!--最大空闲时间,25000秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="0" />
        <!--<property name="testConnectionOnCheckout" value="true"/> -->
    </bean>
    <!-- 配置sessionFactory,使用hibernate5 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSourceHibernate" />
        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <props>
                <!-- 设置数据库方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                <prop key=" hibernate.hbm2ddl.auto">no</prop>
                <!-- 是否在控制台显示sql -->
                <prop key="hibernate.show_sql">false</prop>
                <!-- 是否格式化sql，优化显示 -->
                <prop key="hibernate.format_sql">true</prop>
                <!-- 是否开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!-- 是否开启查询缓存 -->
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <!-- 数据库批量查询最大数 -->
                <prop key="hibernate.jdbc.fetch_size">1000</prop>
                <!-- 数据库批量更新、添加、删除操作最大数 -->
                <prop key="hibernate.jdbc.batch_size">100</prop>
                <prop key="hibernate.order_inserts">true</prop>
                <prop key="hibernate.order_updates">true</prop>
                <!-- 是否自动提交事务 -->
                <prop key="hibernate.connection.autocommit">true</prop>
                <!-- 指定hibernate在何时释放JDBC连接 -->
                <prop key="hibernate.connection.release_mode">auto</prop>
                <!-- 创建session方式 hibernate5.x 的方式 -->
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
                <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包所以把它设置为none即可 -->
                <prop key="javax.persistence.validation.mode">none</prop>
                <!-- 启用延迟加载 -->
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>

            </props>
            <!-- 注解方式配置 -->
        </property>
        <!-- 自动扫描实体对象的包结构中存放实体类 -->
        <property name="packagesToScan">
            <list>
                <value>com.qing.platform.entity</value>
            </list>
        </property>
    </bean>
    <!-- JDBC配置 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSourceHibernate" />
        </property>
    </bean>
    <!-- JDBC配置 -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSourceHibernate" />
    </bean>
    <!-- 配置hiberante模板 -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
    <bean name="transactionManager" id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />
    <!-- 自动扫描Service -->
    <context:component-scan base-package="com.qing.platform.service.imp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- 自动扫描Dao -->
    <context:component-scan base-package="com.qing.platform.dao.imp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
</beans>