<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            <!-- 读取所有资源值 -->
            classpath:*spring-properties.xml,
            <!-- 主配置文件 -->
            classpath:*spring-mvc.xml,
            <!-- 数据库配置文件 -->
            classpath:*spring-hibernate.xml,
        </param-value>
    </context-param>

    <filter>
        <filter-name>openSessionInViewFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>sessionFactoryBeanName</param-name>
            <param-value>sessionFactory</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>openSessionInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <listener>
        <description>Log4j监听器</description>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <description>Introspector缓存清除监听器</description>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <description>request监听器</description>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <description>全局初始化监听</description>
        <listener-class>com.qing.core.listener.ApplicationListener</listener-class>
    </listener>

    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:*spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>index</servlet-name>
        <jsp-file>/index.jsp</jsp-file>
    </servlet>
    <servlet-mapping>
        <servlet-name>index</servlet-name>
        <url-pattern>/index</url-pattern>
    </servlet-mapping>

    <servlet>
        <description>当没有找到到请求的URL时转向的servlet</description>
        <servlet-name>error404Servlet</servlet-name>
        <jsp-file>/WEB-INF/views/errorPage/error-404.jsp</jsp-file>
    </servlet>
    <servlet>
        <description>当服务器端在解析请求的URL出现错误时转向的servlet</description>
        <servlet-name>error500Servlet</servlet-name>
        <jsp-file>/WEB-INF/views/errorPage/error-500.jsp</jsp-file>
    </servlet>
    <servlet-mapping>
        <servlet-name>error404Servlet</servlet-name>
        <url-pattern>/error-404</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>error500Servlet</servlet-name>
        <url-pattern>/error-500</url-pattern>
    </servlet-mapping>

    <error-page>
        <error-code>404</error-code>
        <location>/error-404</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error-500</location>
    </error-page>

    <!-- 默认访问页面 -->
    <welcome-file-list>
        <welcome-file>index</welcome-file>
    </welcome-file-list>

</web-app>